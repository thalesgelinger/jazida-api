// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: materials.sql

package db

import (
	"context"
)

const addMaterial = `-- name: AddMaterial :exec
INSERT INTO materials (name) 
VALUES (?)
`

func (q *Queries) AddMaterial(ctx context.Context, name string) error {
	_, err := q.db.ExecContext(ctx, addMaterial, name)
	return err
}

const getMaterials = `-- name: GetMaterials :many
SELECT 
    name
FROM materials
`

func (q *Queries) GetMaterials(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, getMaterials)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
